{
  "$schema": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json",
  "name": "Azure Terraform (${each.value.full_name})",
  "image": "mcr.microsoft.com/devcontainers/dotnet",
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/azure/azure-dev/azd:latest": {},
    "ghcr.io/devcontainers/features/azure-cli:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/terraform:1": {
      "version": "latest",
      "installTFsec": "true",
      "installTerraformDocs": "true"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/powershell:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/dotnet:2": {
      "version": "9.0",
      "additionalVersions": "8.0",
      "workloads": "aspire"
    }
  },
  "mounts": [
    {
      "type": "volume",
      "source": "x509stores",
      "target": "/home/vscode/.dotnet/corefx/cryptography/x509stores"
    },
    {
      "type": "bind",
      "source": "${localEnv:HOME}${localEnv:USERPROFILE}/.azure",
      "target": "/home/vscode/.azure"
    }
  ],
  "containerEnv": {
    "ARM_CLIENT_ID": "${{ secrets.ARM_CLIENT_ID }}",
    "ARM_TENANT_ID": "${{ secrets.ARM_TENANT_ID }}",
    "ARM_SUBSCRIPTION_ID": "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  },
  "customizations": {
    "codespaces": {
      "openFiles": ["DEVELOPER.md"]
    },
    "vscode": {
      "settings": {
        "[terraform]": {
          "editor.defaultFormatter": "hashicorp.terraform",
          "editor.formatOnSave": true
        },
        "[tfvars]": {
          "editor.defaultFormatter": "hashicorp.terraform"
        },
        "editor.bracketPairColorization.enabled": true,
        "editor.codeActionsOnSave": {
          "source.fixAll": "explicit"
        },
        "editor.formatOnPaste": true,
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.guides.bracketPairs": "active",
        "editor.inlineSuggest.enabled": true,
        "editor.linkedEditing": true,
        "editor.multiCursorModifier": "alt",
        "editor.renderControlCharacters": true,
        "editor.renderWhitespace": "all",
        "editor.rulers": [
          {
            "color": "#A5FF90",
            "column": 80
          },
          {
            "color": "#FF628C",
            "column": 100
          }
        ],
        "editor.stickyScroll.enabled": true,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "on",
        "editor.tabSize": 2,
        "extensions.ignoreRecommendations": true,
        "files.associations": {
          "*.sh.tmpl": "shellscript"
        },
        "files.eol": "\n",
        "files.autoGuessEncoding": false,
        "files.trimTrailingWhitespace": true,
        "terraform.languageServer": {
          "enabled": true
        },
        "json.validate.enable": true,
        "markdown.updateLinksOnFileMove.enabled": "always"
      },
      "extensions": [
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "HashiCorp.terraform",
        "ms-azuretools.vscode-azureappservice",
        "ms-azuretools.vscode-azurefunctions",
        "ms-azuretools.vscode-azureresourcegroups",
        "ms-azuretools.vscode-azureterraform",
        "ms-dotnettools.csharp",
        "ms-dotnettools.vscode-dotnet-runtime",
        "ms-vscode.powershell",
        "ms-vscode.azurecli",
        "redhat.vscode-yaml",
        "zarige.jsonlint"
      ],
      "unwantedRecommendations": ["eamodio.gitlens"],
      "welcome": {
        "title": "ðŸ‘‹ Welcome to this Codespace!",
        "markdown": "WELCOME.md"
      }
    }
  },
  "onCreateCommand": "bash .devcontainer/scripts/setup-dotnet-dev-cert.sh",
  "postCreateCommand": "terraform --version && terraform-docs --version && tfsec --version && azd version",
  "postStartCommand": "git fetch origin && git reset --hard origin/main && bash .devcontainer/scripts/azlogin.sh"
}
